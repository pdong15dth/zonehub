// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  role          String    @default("user")
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  
  accounts      Account[]
  sessions      Session[]
  games         Game[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Game {
  id                 String    @id @default(cuid())
  title              String
  developer          String
  publisher          String
  releaseDate        String
  description        String    @db.Text
  content            String?   @db.Text
  systemRequirements String?   @db.Text
  trailerUrl         String?
  officialWebsite    String?
  platform           String[]
  genre              String[]
  rating             Float     @default(0)
  downloads          Int       @default(0)
  status             String    @default("draft")
  featured           Boolean   @default(false)
  image              String    @default("/placeholder.svg")
  createdBy          String
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt

  creator            User      @relation(fields: [createdBy], references: [id])
} 